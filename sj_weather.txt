[
    {
        "id": "257eaedf.ac1f12",
        "type": "tab",
        "label": "SJ Weather",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fd6d19c4.54ccd8",
        "type": "Stackhero-MySQL",
        "z": "257eaedf.ac1f12",
        "server": "3957a955.8b76ce",
        "name": "Weather DB",
        "x": 430,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "534288b5.f9c81",
        "type": "mqtt in",
        "z": "257eaedf.ac1f12",
        "name": "SJ Weather Data",
        "topic": "darksky/lau/sj",
        "qos": "0",
        "datatype": "auto",
        "broker": "7533b41d.359624",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "94ea1248.f69e2"
            ]
        ]
    },
    {
        "id": "21439308.2c4d64",
        "type": "function",
        "z": "257eaedf.ac1f12",
        "name": "Prepare Data",
        "func": "msg.topic = 'insert into sj_data (time, temperature, humidity, pressure, windSpeed, uvIndex, visibility) values (:time, :temperature, :humidity, :pressure, :windSpeed, :uvIndex, :visibility)' \n\nlet msg1 = {}\nlet temperature = msg.payload.temperature\nmsg1.topic = 'Temperature Live'\nmsg1.payload = temperature\n\n\n\nreturn [msg, msg1];",
        "outputs": 2,
        "noerr": 0,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "fd6d19c4.54ccd8"
            ],
            [
                "41ea186d.8249d"
            ]
        ]
    },
    {
        "id": "94ea1248.f69e2",
        "type": "json",
        "z": "257eaedf.ac1f12",
        "name": "Convert to Object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 40,
        "wires": [
            [
                "21439308.2c4d64"
            ]
        ]
    },
    {
        "id": "41ea186d.8249d",
        "type": "ui_chart",
        "z": "257eaedf.ac1f12",
        "name": "",
        "group": "ec7c318d.ee39d8",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Temperature Live",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 450,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "3957a955.8b76ce",
        "type": "Stackhero-MySQL-Server",
        "z": "",
        "name": "Weather DB",
        "host": "localhost",
        "port": "3306",
        "tls": false,
        "database": "Weather"
    },
    {
        "id": "7533b41d.359624",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "ec7c318d.ee39d8",
        "type": "ui_group",
        "z": "",
        "name": "San Jose Live",
        "tab": "66a158fa.d39d9",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "66a158fa.d39d9",
        "type": "ui_tab",
        "z": "",
        "name": "Weather Panel",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]